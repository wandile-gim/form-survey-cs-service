// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "row_num", Type: field.TypeInt, Unique: true},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
		{Name: "phone", Type: field.TypeString},
		{Name: "group", Type: field.TypeString},
		{Name: "corps", Type: field.TypeString, Nullable: true},
		{Name: "food", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "generation", Type: field.TypeString, Nullable: true},
		{Name: "region", Type: field.TypeString},
		{Name: "registered_at", Type: field.TypeTime, Nullable: true},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
	}
	// TaskLogsColumns holds the columns for the "task_logs" table.
	TaskLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "message", Type: field.TypeString, Default: ""},
	}
	// TaskLogsTable holds the schema information for the "task_logs" table.
	TaskLogsTable = &schema.Table{
		Name:       "task_logs",
		Columns:    TaskLogsColumns,
		PrimaryKey: []*schema.Column{TaskLogsColumns[0]},
	}
	// TaskRecordsColumns holds the columns for the "task_records" table.
	TaskRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "state", Type: field.TypeString, Default: "IDLE"},
		{Name: "retry_count", Type: field.TypeInt, Default: 0},
		{Name: "task_task_record", Type: field.TypeInt, Unique: true},
	}
	// TaskRecordsTable holds the schema information for the "task_records" table.
	TaskRecordsTable = &schema.Table{
		Name:       "task_records",
		Columns:    TaskRecordsColumns,
		PrimaryKey: []*schema.Column{TaskRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_records_tasks_task_record",
				Columns:    []*schema.Column{TaskRecordsColumns[3]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TrackersColumns holds the columns for the "trackers" table.
	TrackersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "service", Type: field.TypeEnum, Enums: []string{"MEMBER"}, Default: "MEMBER"},
		{Name: "last_one", Type: field.TypeTime},
		{Name: "version", Type: field.TypeTime},
	}
	// TrackersTable holds the schema information for the "trackers" table.
	TrackersTable = &schema.Table{
		Name:       "trackers",
		Columns:    TrackersColumns,
		PrimaryKey: []*schema.Column{TrackersColumns[0]},
	}
	// TaskRecordTaskLogsColumns holds the columns for the "task_record_task_logs" table.
	TaskRecordTaskLogsColumns = []*schema.Column{
		{Name: "task_record_id", Type: field.TypeInt},
		{Name: "task_log_id", Type: field.TypeInt},
	}
	// TaskRecordTaskLogsTable holds the schema information for the "task_record_task_logs" table.
	TaskRecordTaskLogsTable = &schema.Table{
		Name:       "task_record_task_logs",
		Columns:    TaskRecordTaskLogsColumns,
		PrimaryKey: []*schema.Column{TaskRecordTaskLogsColumns[0], TaskRecordTaskLogsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_record_task_logs_task_record_id",
				Columns:    []*schema.Column{TaskRecordTaskLogsColumns[0]},
				RefColumns: []*schema.Column{TaskRecordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "task_record_task_logs_task_log_id",
				Columns:    []*schema.Column{TaskRecordTaskLogsColumns[1]},
				RefColumns: []*schema.Column{TaskLogsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TasksTable,
		TaskLogsTable,
		TaskRecordsTable,
		TrackersTable,
		TaskRecordTaskLogsTable,
	}
)

func init() {
	TaskRecordsTable.ForeignKeys[0].RefTable = TasksTable
	TaskRecordTaskLogsTable.ForeignKeys[0].RefTable = TaskRecordsTable
	TaskRecordTaskLogsTable.ForeignKeys[1].RefTable = TaskLogsTable
}
